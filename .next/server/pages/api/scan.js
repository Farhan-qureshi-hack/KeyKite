"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/scan";
exports.ids = ["pages/api/scan"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\scan.ts */ \"(api-node)/./pages/api/scan.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/scan\",\n        pathname: \"/api/scan\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/scan\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/scan\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/scan.ts":
/*!***************************!*\
  !*** ./pages/api/scan.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var _server_security__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/security */ \"(api-node)/./server/security.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// pages/api/scan.ts\n\n\nfunction parseGithubRepo(url) {\n    // accepts https://github.com/owner/repo or git@github.com:owner/repo.git\n    try {\n        // handle git@... or https\n        if (url.startsWith(\"git@\")) {\n            const parts = url.split(\":\")[1].replace(/\\.git$/, \"\");\n            const [owner, repo] = parts.split(\"/\");\n            return {\n                owner,\n                repo\n            };\n        }\n        const u = new URL(url);\n        const parts = u.pathname.replace(/^\\/|\\.git$/g, \"\").split(\"/\");\n        const owner = parts[0];\n        const repo = parts[1];\n        return {\n            owner,\n            repo\n        };\n    } catch  {\n        return null;\n    }\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") return res.status(405).json({\n        repo: \"\",\n        findings: [],\n        error: \"Only POST\"\n    });\n    const { repoUrl } = req.body;\n    if (!repoUrl) return res.status(400).json({\n        repo: \"\",\n        findings: [],\n        error: \"repoUrl required\"\n    });\n    const repoInfo = parseGithubRepo(repoUrl);\n    if (!repoInfo) return res.status(400).json({\n        repo: repoUrl,\n        findings: [],\n        error: \"Invalid repo URL\"\n    });\n    const { owner, repo } = repoInfo;\n    const githubToken = process.env.GITHUB_TOKEN || \"\";\n    try {\n        // Get default branch\n        const repoResp = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://api.github.com/repos/${owner}/${repo}`, {\n            headers: githubToken ? {\n                Authorization: `token ${githubToken}`\n            } : undefined\n        });\n        const defaultBranch = repoResp.data.default_branch || \"main\";\n        // Get tree recursive\n        const treeResp = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`https://api.github.com/repos/${owner}/${repo}/git/trees/${defaultBranch}?recursive=1`, {\n            headers: githubToken ? {\n                Authorization: `token ${githubToken}`\n            } : undefined\n        });\n        const tree = treeResp.data.tree;\n        // Filter files by text-like extensions\n        const textExts = [\n            \".js\",\n            \".ts\",\n            \".jsx\",\n            \".tsx\",\n            \".py\",\n            \".rb\",\n            \".go\",\n            \".java\",\n            \".json\",\n            \".env\",\n            \".yml\",\n            \".yaml\",\n            \".sh\",\n            \".txt\",\n            \".md\"\n        ];\n        const filePaths = tree.filter((t)=>t.type === \"blob\").map((t)=>t.path).filter((p)=>{\n            const ext = p.includes(\".\") ? p.slice(p.lastIndexOf(\".\")).toLowerCase() : \"\";\n            return textExts.includes(ext) || ext === \"\";\n        });\n        const findings = [];\n        // fetch raw file contents (chunks)\n        const maxFiles = 100; // safety cap\n        let count = 0;\n        for (const fp of filePaths){\n            if (count >= maxFiles) break;\n            count++;\n            try {\n                const rawUrl = `https://raw.githubusercontent.com/${owner}/${repo}/${defaultBranch}/${fp}`;\n                const fileResp = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(rawUrl, {\n                    headers: githubToken ? {\n                        Authorization: `token ${githubToken}`\n                    } : undefined,\n                    responseType: \"text\"\n                });\n                const content = fileResp.data;\n                const found = (0,_server_security__WEBPACK_IMPORTED_MODULE_1__.scanContent)(content, fp);\n                if (found.length) findings.push(...found);\n            } catch (e) {\n            // ignore individual file errors\n            }\n        }\n        return res.status(200).json({\n            repo: `${owner}/${repo}`,\n            findings\n        });\n    } catch (err) {\n        const message = err?.response?.data?.message || err.message || \"scan error\";\n        return res.status(500).json({\n            repo: `${owner}/${repo}`,\n            findings: [],\n            error: String(message)\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/scan.ts\n");

/***/ }),

/***/ "(api-node)/./server/security.ts":
/*!****************************!*\
  !*** ./server/security.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readFileSafe: () => (/* binding */ readFileSafe),\n/* harmony export */   scanContent: () => (/* binding */ scanContent),\n/* harmony export */   scanDirectory: () => (/* binding */ scanDirectory),\n/* harmony export */   scanFile: () => (/* binding */ scanFile)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n// server/security.ts\n\n\n// Safely read a file; returns empty string on error\nfunction readFileSafe(filePath) {\n    try {\n        return fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(filePath, \"utf8\");\n    } catch (err) {\n        // swallow read errors and return empty string\n        return \"\";\n    }\n}\n// Scan raw content for secrets. Server version (same patterns as frontend).\nfunction scanContent(content, fileName = \"inline\") {\n    const findings = [];\n    const lines = content.split(\"\\n\");\n    const patterns = [\n        {\n            type: \"AWS Access Key\",\n            re: /AKIA[0-9A-Z]{16}/\n        },\n        {\n            type: \"Generic API Key\",\n            re: /api_[0-9A-Za-z\\-_]{8,}/\n        },\n        {\n            type: \"Possible Password\",\n            re: /password\\s*[:=]\\s*[^\\s'\"]+/i\n        },\n        {\n            type: \"Private Key\",\n            re: /-----BEGIN [A-Z ]*PRIVATE KEY-----/\n        }\n    ];\n    lines.forEach((line, idx)=>{\n        patterns.forEach((p)=>{\n            const m = line.match(p.re);\n            if (m) {\n                const snippet = m[0];\n                findings.push({\n                    file: fileName,\n                    line: idx + 1,\n                    type: p.type,\n                    snippet,\n                    redacted: snippet.length > 8 ? `${snippet.slice(0, 4)}...${snippet.slice(-4)}` : snippet\n                });\n            }\n        });\n    });\n    return findings;\n}\n// Scan single file path\nfunction scanFile(filePath) {\n    const content = readFileSafe(filePath);\n    if (!content) return [];\n    return scanContent(content, path__WEBPACK_IMPORTED_MODULE_1___default().basename(filePath));\n}\n// Recursively scan a directory (returns all findings)\nfunction scanDirectory(dirPath) {\n    const results = [];\n    if (!fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(dirPath)) return results;\n    const items = fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(dirPath, {\n        withFileTypes: true\n    });\n    for (const item of items){\n        const full = path__WEBPACK_IMPORTED_MODULE_1___default().join(dirPath, item.name);\n        if (item.isDirectory()) {\n            results.push(...scanDirectory(full));\n        } else if (item.isFile()) {\n            // scan only text-like extensions to avoid binary blobs\n            const ext = path__WEBPACK_IMPORTED_MODULE_1___default().extname(item.name).toLowerCase();\n            const textExts = [\n                \".js\",\n                \".ts\",\n                \".jsx\",\n                \".tsx\",\n                \".py\",\n                \".rb\",\n                \".go\",\n                \".java\",\n                \".json\",\n                \".env\",\n                \".yml\",\n                \".yaml\",\n                \".sh\",\n                \".txt\",\n                \".md\"\n            ];\n            if (textExts.includes(ext) || ext === \"\") {\n                results.push(...scanFile(full));\n            }\n        }\n    }\n    return results;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NlcnZlci9zZWN1cml0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLHFCQUFxQjtBQUNEO0FBQ0k7QUFXeEIsb0RBQW9EO0FBQzdDLFNBQVNFLGFBQWFDLFFBQWdCO0lBQzNDLElBQUk7UUFDRixPQUFPSCxzREFBZSxDQUFDRyxVQUFVO0lBQ25DLEVBQUUsT0FBT0UsS0FBSztRQUNaLDhDQUE4QztRQUM5QyxPQUFPO0lBQ1Q7QUFDRjtBQUVBLDRFQUE0RTtBQUNyRSxTQUFTQyxZQUFZQyxPQUFlLEVBQUVDLFdBQVcsUUFBUTtJQUM5RCxNQUFNQyxXQUFzQixFQUFFO0lBQzlCLE1BQU1DLFFBQVFILFFBQVFJLEtBQUssQ0FBQztJQUM1QixNQUFNQyxXQUEyQztRQUMvQztZQUFFQyxNQUFNO1lBQWtCQyxJQUFJO1FBQW1CO1FBQ2pEO1lBQUVELE1BQU07WUFBbUJDLElBQUk7UUFBeUI7UUFDeEQ7WUFBRUQsTUFBTTtZQUFxQkMsSUFBSTtRQUE4QjtRQUMvRDtZQUFFRCxNQUFNO1lBQWVDLElBQUk7UUFBcUM7S0FDakU7SUFFREosTUFBTUssT0FBTyxDQUFDLENBQUNDLE1BQU1DO1FBQ25CTCxTQUFTRyxPQUFPLENBQUMsQ0FBQ0c7WUFDaEIsTUFBTUMsSUFBSUgsS0FBS0ksS0FBSyxDQUFDRixFQUFFSixFQUFFO1lBQ3pCLElBQUlLLEdBQUc7Z0JBQ0wsTUFBTUUsVUFBVUYsQ0FBQyxDQUFDLEVBQUU7Z0JBQ3BCVixTQUFTYSxJQUFJLENBQUM7b0JBQ1pDLE1BQU1mO29CQUNOUSxNQUFNQyxNQUFNO29CQUNaSixNQUFNSyxFQUFFTCxJQUFJO29CQUNaUTtvQkFDQUcsVUFBVUgsUUFBUUksTUFBTSxHQUFHLElBQUksR0FBR0osUUFBUUssS0FBSyxDQUFDLEdBQUcsR0FBRyxHQUFHLEVBQUVMLFFBQVFLLEtBQUssQ0FBQyxDQUFDLElBQUksR0FBR0w7Z0JBQ25GO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsT0FBT1o7QUFDVDtBQUVBLHdCQUF3QjtBQUNqQixTQUFTa0IsU0FBU3hCLFFBQWdCO0lBQ3ZDLE1BQU1JLFVBQVVMLGFBQWFDO0lBQzdCLElBQUksQ0FBQ0ksU0FBUyxPQUFPLEVBQUU7SUFDdkIsT0FBT0QsWUFBWUMsU0FBU04sb0RBQWEsQ0FBQ0U7QUFDNUM7QUFFQSxzREFBc0Q7QUFDL0MsU0FBUzBCLGNBQWNDLE9BQWU7SUFDM0MsTUFBTUMsVUFBcUIsRUFBRTtJQUM3QixJQUFJLENBQUMvQixvREFBYSxDQUFDOEIsVUFBVSxPQUFPQztJQUVwQyxNQUFNRSxRQUFRakMscURBQWMsQ0FBQzhCLFNBQVM7UUFBRUssZUFBZTtJQUFLO0lBRTVELEtBQUssTUFBTUMsUUFBUUgsTUFBTztRQUN4QixNQUFNSSxPQUFPcEMsZ0RBQVMsQ0FBQzZCLFNBQVNNLEtBQUtHLElBQUk7UUFDekMsSUFBSUgsS0FBS0ksV0FBVyxJQUFJO1lBQ3RCVCxRQUFRVCxJQUFJLElBQUlPLGNBQWNRO1FBQ2hDLE9BQU8sSUFBSUQsS0FBS0ssTUFBTSxJQUFJO1lBQ3hCLHVEQUF1RDtZQUN2RCxNQUFNQyxNQUFNekMsbURBQVksQ0FBQ21DLEtBQUtHLElBQUksRUFBRUssV0FBVztZQUMvQyxNQUFNQyxXQUFXO2dCQUNmO2dCQUFPO2dCQUFPO2dCQUFRO2dCQUFRO2dCQUFPO2dCQUFPO2dCQUFPO2dCQUFTO2dCQUFTO2dCQUFRO2dCQUFRO2dCQUFTO2dCQUFPO2dCQUFRO2FBQzlHO1lBQ0QsSUFBSUEsU0FBU0MsUUFBUSxDQUFDSixRQUFRQSxRQUFRLElBQUk7Z0JBQ3hDWCxRQUFRVCxJQUFJLElBQUlLLFNBQVNVO1lBQzNCO1FBQ0Y7SUFDRjtJQUVBLE9BQU9OO0FBQ1QiLCJzb3VyY2VzIjpbIkY6XFxmYXJoYW5cXFByb2plY3RzXFxrZXlraXRlXFxzZXJ2ZXJcXHNlY3VyaXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNlcnZlci9zZWN1cml0eS50c1xyXG5pbXBvcnQgZnMgZnJvbSBcImZzXCI7XHJcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XHJcblxyXG4vLyBTaGFyZWQgRmluZGluZyB0eXBlIGZvciBzZXJ2ZXIgdXNhZ2VcclxuZXhwb3J0IGludGVyZmFjZSBGaW5kaW5nIHtcclxuICBmaWxlPzogc3RyaW5nO1xyXG4gIGxpbmU6IG51bWJlcjtcclxuICB0eXBlOiBzdHJpbmc7XHJcbiAgc25pcHBldDogc3RyaW5nO1xyXG4gIHJlZGFjdGVkPzogc3RyaW5nO1xyXG59XHJcblxyXG4vLyBTYWZlbHkgcmVhZCBhIGZpbGU7IHJldHVybnMgZW1wdHkgc3RyaW5nIG9uIGVycm9yXHJcbmV4cG9ydCBmdW5jdGlvbiByZWFkRmlsZVNhZmUoZmlsZVBhdGg6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgdHJ5IHtcclxuICAgIHJldHVybiBmcy5yZWFkRmlsZVN5bmMoZmlsZVBhdGgsIFwidXRmOFwiKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIC8vIHN3YWxsb3cgcmVhZCBlcnJvcnMgYW5kIHJldHVybiBlbXB0eSBzdHJpbmdcclxuICAgIHJldHVybiBcIlwiO1xyXG4gIH1cclxufVxyXG5cclxuLy8gU2NhbiByYXcgY29udGVudCBmb3Igc2VjcmV0cy4gU2VydmVyIHZlcnNpb24gKHNhbWUgcGF0dGVybnMgYXMgZnJvbnRlbmQpLlxyXG5leHBvcnQgZnVuY3Rpb24gc2NhbkNvbnRlbnQoY29udGVudDogc3RyaW5nLCBmaWxlTmFtZSA9IFwiaW5saW5lXCIpOiBGaW5kaW5nW10ge1xyXG4gIGNvbnN0IGZpbmRpbmdzOiBGaW5kaW5nW10gPSBbXTtcclxuICBjb25zdCBsaW5lcyA9IGNvbnRlbnQuc3BsaXQoXCJcXG5cIik7XHJcbiAgY29uc3QgcGF0dGVybnM6IHsgdHlwZTogc3RyaW5nOyByZTogUmVnRXhwIH1bXSA9IFtcclxuICAgIHsgdHlwZTogXCJBV1MgQWNjZXNzIEtleVwiLCByZTogL0FLSUFbMC05QS1aXXsxNn0vIH0sXHJcbiAgICB7IHR5cGU6IFwiR2VuZXJpYyBBUEkgS2V5XCIsIHJlOiAvYXBpX1swLTlBLVphLXpcXC1fXXs4LH0vIH0sXHJcbiAgICB7IHR5cGU6IFwiUG9zc2libGUgUGFzc3dvcmRcIiwgcmU6IC9wYXNzd29yZFxccypbOj1dXFxzKlteXFxzJ1wiXSsvaSB9LFxyXG4gICAgeyB0eXBlOiBcIlByaXZhdGUgS2V5XCIsIHJlOiAvLS0tLS1CRUdJTiBbQS1aIF0qUFJJVkFURSBLRVktLS0tLS8gfSxcclxuICBdO1xyXG5cclxuICBsaW5lcy5mb3JFYWNoKChsaW5lLCBpZHgpID0+IHtcclxuICAgIHBhdHRlcm5zLmZvckVhY2goKHApID0+IHtcclxuICAgICAgY29uc3QgbSA9IGxpbmUubWF0Y2gocC5yZSk7XHJcbiAgICAgIGlmIChtKSB7XHJcbiAgICAgICAgY29uc3Qgc25pcHBldCA9IG1bMF07XHJcbiAgICAgICAgZmluZGluZ3MucHVzaCh7XHJcbiAgICAgICAgICBmaWxlOiBmaWxlTmFtZSxcclxuICAgICAgICAgIGxpbmU6IGlkeCArIDEsXHJcbiAgICAgICAgICB0eXBlOiBwLnR5cGUsXHJcbiAgICAgICAgICBzbmlwcGV0LFxyXG4gICAgICAgICAgcmVkYWN0ZWQ6IHNuaXBwZXQubGVuZ3RoID4gOCA/IGAke3NuaXBwZXQuc2xpY2UoMCwgNCl9Li4uJHtzbmlwcGV0LnNsaWNlKC00KX1gIDogc25pcHBldCxcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiBmaW5kaW5ncztcclxufVxyXG5cclxuLy8gU2NhbiBzaW5nbGUgZmlsZSBwYXRoXHJcbmV4cG9ydCBmdW5jdGlvbiBzY2FuRmlsZShmaWxlUGF0aDogc3RyaW5nKTogRmluZGluZ1tdIHtcclxuICBjb25zdCBjb250ZW50ID0gcmVhZEZpbGVTYWZlKGZpbGVQYXRoKTtcclxuICBpZiAoIWNvbnRlbnQpIHJldHVybiBbXTtcclxuICByZXR1cm4gc2NhbkNvbnRlbnQoY29udGVudCwgcGF0aC5iYXNlbmFtZShmaWxlUGF0aCkpO1xyXG59XHJcblxyXG4vLyBSZWN1cnNpdmVseSBzY2FuIGEgZGlyZWN0b3J5IChyZXR1cm5zIGFsbCBmaW5kaW5ncylcclxuZXhwb3J0IGZ1bmN0aW9uIHNjYW5EaXJlY3RvcnkoZGlyUGF0aDogc3RyaW5nKTogRmluZGluZ1tdIHtcclxuICBjb25zdCByZXN1bHRzOiBGaW5kaW5nW10gPSBbXTtcclxuICBpZiAoIWZzLmV4aXN0c1N5bmMoZGlyUGF0aCkpIHJldHVybiByZXN1bHRzO1xyXG5cclxuICBjb25zdCBpdGVtcyA9IGZzLnJlYWRkaXJTeW5jKGRpclBhdGgsIHsgd2l0aEZpbGVUeXBlczogdHJ1ZSB9KTtcclxuXHJcbiAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7XHJcbiAgICBjb25zdCBmdWxsID0gcGF0aC5qb2luKGRpclBhdGgsIGl0ZW0ubmFtZSk7XHJcbiAgICBpZiAoaXRlbS5pc0RpcmVjdG9yeSgpKSB7XHJcbiAgICAgIHJlc3VsdHMucHVzaCguLi5zY2FuRGlyZWN0b3J5KGZ1bGwpKTtcclxuICAgIH0gZWxzZSBpZiAoaXRlbS5pc0ZpbGUoKSkge1xyXG4gICAgICAvLyBzY2FuIG9ubHkgdGV4dC1saWtlIGV4dGVuc2lvbnMgdG8gYXZvaWQgYmluYXJ5IGJsb2JzXHJcbiAgICAgIGNvbnN0IGV4dCA9IHBhdGguZXh0bmFtZShpdGVtLm5hbWUpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgIGNvbnN0IHRleHRFeHRzID0gW1xyXG4gICAgICAgIFwiLmpzXCIsIFwiLnRzXCIsIFwiLmpzeFwiLCBcIi50c3hcIiwgXCIucHlcIiwgXCIucmJcIiwgXCIuZ29cIiwgXCIuamF2YVwiLCBcIi5qc29uXCIsIFwiLmVudlwiLCBcIi55bWxcIiwgXCIueWFtbFwiLCBcIi5zaFwiLCBcIi50eHRcIiwgXCIubWRcIixcclxuICAgICAgXTtcclxuICAgICAgaWYgKHRleHRFeHRzLmluY2x1ZGVzKGV4dCkgfHwgZXh0ID09PSBcIlwiKSB7XHJcbiAgICAgICAgcmVzdWx0cy5wdXNoKC4uLnNjYW5GaWxlKGZ1bGwpKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHJlc3VsdHM7XHJcbn1cclxuIl0sIm5hbWVzIjpbImZzIiwicGF0aCIsInJlYWRGaWxlU2FmZSIsImZpbGVQYXRoIiwicmVhZEZpbGVTeW5jIiwiZXJyIiwic2NhbkNvbnRlbnQiLCJjb250ZW50IiwiZmlsZU5hbWUiLCJmaW5kaW5ncyIsImxpbmVzIiwic3BsaXQiLCJwYXR0ZXJucyIsInR5cGUiLCJyZSIsImZvckVhY2giLCJsaW5lIiwiaWR4IiwicCIsIm0iLCJtYXRjaCIsInNuaXBwZXQiLCJwdXNoIiwiZmlsZSIsInJlZGFjdGVkIiwibGVuZ3RoIiwic2xpY2UiLCJzY2FuRmlsZSIsImJhc2VuYW1lIiwic2NhbkRpcmVjdG9yeSIsImRpclBhdGgiLCJyZXN1bHRzIiwiZXhpc3RzU3luYyIsIml0ZW1zIiwicmVhZGRpclN5bmMiLCJ3aXRoRmlsZVR5cGVzIiwiaXRlbSIsImZ1bGwiLCJqb2luIiwibmFtZSIsImlzRGlyZWN0b3J5IiwiaXNGaWxlIiwiZXh0IiwiZXh0bmFtZSIsInRvTG93ZXJDYXNlIiwidGV4dEV4dHMiLCJpbmNsdWRlcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./server/security.ts\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();