"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/scan";
exports.ids = ["pages/api/scan"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\scan.ts */ \"(api-node)/./pages/api/scan.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/scan\",\n        pathname: \"/api/scan\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_scan_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/scan\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/scan\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/scan.ts":
/*!***************************!*\
  !*** ./pages/api/scan.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var _utils_security__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/security */ \"(api-node)/./utils/security.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_0__]);\naxios__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// pages/api/scan.ts\n\n\nconst RETRY = 2;\nconst DELAY_MS = 250; // small delay between retries to reduce spiky errors\nconst MAX_FILES = 1000; // safety cap to avoid scanning huge trees (adjustable)\nasync function axiosGetWithRetry(url, headers, retries = RETRY) {\n    for(let attempt = 0; attempt <= retries; attempt++){\n        try {\n            return await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(url, {\n                headers,\n                timeout: 15000\n            });\n        } catch (err) {\n            if (attempt === retries) throw err;\n            await new Promise((r)=>setTimeout(r, DELAY_MS * (attempt + 1)));\n        }\n    }\n    throw new Error('unreachable');\n}\nasync function handler(req, res) {\n    try {\n        const repoParam = req.query.repo || '';\n        if (!repoParam) return res.status(400).json({\n            success: false,\n            error: 'Missing repo query parameter'\n        });\n        const token = process.env.GITHUB_TOKEN;\n        if (!token) return res.status(500).json({\n            success: false,\n            error: 'Server missing GITHUB_TOKEN'\n        });\n        const parsed = repoParam.replace(/https?:\\/\\/(www\\.)?github\\.com\\//i, '').split('/');\n        if (parsed.length < 2) return res.status(400).json({\n            success: false,\n            error: 'Invalid GitHub repo URL'\n        });\n        const owner = parsed[0];\n        const repo = parsed[1];\n        const headers = {\n            Authorization: `token ${token}`,\n            Accept: 'application/vnd.github.v3+json'\n        };\n        // 1) Get repo info to find default branch\n        const repoInfo = await axiosGetWithRetry(`https://api.github.com/repos/${owner}/${repo}`, headers);\n        const defaultBranch = repoInfo.data?.default_branch || 'main';\n        // 2) Fetch Git tree recursively\n        const treeUrl = `https://api.github.com/repos/${owner}/${repo}/git/trees/${encodeURIComponent(defaultBranch)}?recursive=1`;\n        const treeResp = await axiosGetWithRetry(treeUrl, headers);\n        const tree = treeResp.data?.tree || [];\n        let files = tree.filter((f)=>f.type === 'blob');\n        if (!Array.isArray(files)) files = [];\n        // Safety cap\n        const totalFiles = Math.min(files.length, MAX_FILES);\n        if (files.length > MAX_FILES) {\n            files = files.slice(0, MAX_FILES);\n        }\n        const findings = [];\n        let scanned = 0;\n        for (const file of files){\n            scanned++;\n            try {\n                // fetch file content\n                const fileUrl = `https://api.github.com/repos/${owner}/${repo}/contents/${encodeURIComponent(file.path)}?ref=${defaultBranch}`;\n                const blobResp = await axiosGetWithRetry(fileUrl, headers);\n                const { data } = blobResp;\n                if (!data || !data.content || data.encoding !== 'base64') {\n                    continue;\n                }\n                const content = Buffer.from(data.content, 'base64').toString('utf8');\n                // scan safely\n                const fileFindings = (0,_utils_security__WEBPACK_IMPORTED_MODULE_1__.scanContent)(file.path, content);\n                // push redacted/snippet + entropy already present\n                findings.push(...fileFindings.map((f)=>{\n                    // ensure we never return raw secrets in snippet field by default in UI (we keep snippet for internal checks)\n                    return {\n                        ...f,\n                        snippet: f.redacted || f.snippet\n                    };\n                }));\n            } catch (err) {\n                console.warn('Skipped file:', file.path, err.message || err);\n            // continue scanning next file\n            }\n        }\n        return res.status(200).json({\n            success: true,\n            results: findings,\n            scanned,\n            total: totalFiles\n        });\n    } catch (err) {\n        console.error('Scan error:', err.message || err);\n        return res.status(500).json({\n            success: false,\n            error: err.message || 'Scan failed'\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/scan.ts\n");

/***/ }),

/***/ "(api-node)/./utils/security.ts":
/*!***************************!*\
  !*** ./utils/security.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isTextContent: () => (/* binding */ isTextContent),\n/* harmony export */   redactSecret: () => (/* binding */ redactSecret),\n/* harmony export */   scanContent: () => (/* binding */ scanContent),\n/* harmony export */   shannonEntropy: () => (/* binding */ shannonEntropy)\n/* harmony export */ });\n// utils/security.ts\nfunction isTextContent(bufOrStr) {\n    // crude heuristic: if it contains many control chars it's binary\n    // but here input is string; check for NULs or many control chars\n    return !/[\\x00-\\x08\\x0E-\\x1F]/.test(bufOrStr);\n}\nfunction shannonEntropy(s) {\n    if (!s || s.length === 0) return 0;\n    const freq = {};\n    for (const ch of s)freq[ch] = (freq[ch] || 0) + 1;\n    let ent = 0;\n    const len = s.length;\n    for (const k of Object.keys(freq)){\n        const p = freq[k] / len;\n        ent -= p * Math.log2(p);\n    }\n    return ent;\n}\nfunction redactSecret(secret) {\n    if (!secret) return '[REDACTED]';\n    const last = secret.slice(-4);\n    return `[REDACTED]...${last}`;\n}\nconst PATTERNS = [\n    {\n        type: 'AWS Access Key',\n        regex: /AKIA[0-9A-Z]{16}/g\n    },\n    {\n        type: 'Google API Key',\n        regex: /AIza[0-9A-Za-z-_]{35}/g\n    },\n    {\n        type: 'GitHub PAT-like',\n        regex: /gh[pousr]_[0-9a-zA-Z_]{36}/g\n    },\n    {\n        type: 'Slack Token',\n        regex: /xox[baprs]-[0-9a-zA-Z-]{10,48}/g\n    },\n    {\n        type: 'JWT',\n        regex: /eyJ[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_.+/=]*/g\n    },\n    {\n        type: 'Generic API Key (var)',\n        regex: /api[_-]?key\\s*[:=]\\s*['\"]?([A-Za-z0-9-_.]+)['\"]?/gi\n    },\n    {\n        type: 'Password var',\n        regex: /password\\s*[:=]\\s*['\"].+?['\"]/gi\n    },\n    {\n        type: 'Private Key PEM',\n        regex: /-----BEGIN (RSA |ENCRYPTED )?PRIVATE KEY-----/g\n    }\n];\nfunction scanContent(filePath, content) {\n    const findings = [];\n    if (!content || typeof content !== 'string') return findings;\n    if (!isTextContent(content)) return findings;\n    const lines = content.split(/\\r?\\n/);\n    for(let i = 0; i < lines.length; i++){\n        const line = lines[i];\n        for (const p of PATTERNS){\n            let m;\n            const re = new RegExp(p.regex);\n            // run global matches\n            while((m = re.exec(line)) !== null){\n                const raw = m[0];\n                const entropy = shannonEntropy(raw);\n                findings.push({\n                    file: filePath,\n                    line: i + 1,\n                    type: p.type,\n                    snippet: raw,\n                    entropy,\n                    redacted: redactSecret(raw)\n                });\n                // avoid infinite loops for zero-length matches\n                if (re.lastIndex === m.index) re.lastIndex++;\n            }\n        }\n    }\n    return findings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3V0aWxzL3NlY3VyaXR5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFVYixTQUFTQSxjQUFjQyxRQUFnQjtJQUM1QyxpRUFBaUU7SUFDakUsaUVBQWlFO0lBQ2pFLE9BQU8sQ0FBQyx1QkFBdUJDLElBQUksQ0FBQ0Q7QUFDdEM7QUFFTyxTQUFTRSxlQUFlQyxDQUFTO0lBQ3RDLElBQUksQ0FBQ0EsS0FBS0EsRUFBRUMsTUFBTSxLQUFLLEdBQUcsT0FBTztJQUNqQyxNQUFNQyxPQUErQixDQUFDO0lBQ3RDLEtBQUssTUFBTUMsTUFBTUgsRUFBR0UsSUFBSSxDQUFDQyxHQUFHLEdBQUcsQ0FBQ0QsSUFBSSxDQUFDQyxHQUFHLElBQUksS0FBSztJQUNqRCxJQUFJQyxNQUFNO0lBQ1YsTUFBTUMsTUFBTUwsRUFBRUMsTUFBTTtJQUNwQixLQUFLLE1BQU1LLEtBQUtDLE9BQU9DLElBQUksQ0FBQ04sTUFBTztRQUNqQyxNQUFNTyxJQUFJUCxJQUFJLENBQUNJLEVBQUUsR0FBR0Q7UUFDcEJELE9BQU9LLElBQUlDLEtBQUtDLElBQUksQ0FBQ0Y7SUFDdkI7SUFDQSxPQUFPTDtBQUNUO0FBRU8sU0FBU1EsYUFBYUMsTUFBYztJQUN6QyxJQUFJLENBQUNBLFFBQVEsT0FBTztJQUNwQixNQUFNQyxPQUFPRCxPQUFPRSxLQUFLLENBQUMsQ0FBQztJQUMzQixPQUFPLENBQUMsYUFBYSxFQUFFRCxNQUFNO0FBQy9CO0FBRUEsTUFBTUUsV0FBOEM7SUFDbEQ7UUFBRUMsTUFBTTtRQUFrQkMsT0FBTztJQUFvQjtJQUNyRDtRQUFFRCxNQUFNO1FBQWtCQyxPQUFPO0lBQXlCO0lBQzFEO1FBQUVELE1BQU07UUFBbUJDLE9BQU87SUFBOEI7SUFDaEU7UUFBRUQsTUFBTTtRQUFlQyxPQUFPO0lBQWtDO0lBQ2hFO1FBQUVELE1BQU07UUFBT0MsT0FBTztJQUF5RDtJQUMvRTtRQUFFRCxNQUFNO1FBQXlCQyxPQUFPO0lBQXFEO0lBQzdGO1FBQUVELE1BQU07UUFBZ0JDLE9BQU87SUFBa0M7SUFDakU7UUFBRUQsTUFBTTtRQUFtQkMsT0FBTztJQUFpRDtDQUNwRjtBQUVNLFNBQVNDLFlBQVlDLFFBQWdCLEVBQUVDLE9BQWU7SUFDM0QsTUFBTUMsV0FBc0IsRUFBRTtJQUM5QixJQUFJLENBQUNELFdBQVcsT0FBT0EsWUFBWSxVQUFVLE9BQU9DO0lBQ3BELElBQUksQ0FBQzFCLGNBQWN5QixVQUFVLE9BQU9DO0lBRXBDLE1BQU1DLFFBQVFGLFFBQVFHLEtBQUssQ0FBQztJQUM1QixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUYsTUFBTXRCLE1BQU0sRUFBRXdCLElBQUs7UUFDckMsTUFBTUMsT0FBT0gsS0FBSyxDQUFDRSxFQUFFO1FBQ3JCLEtBQUssTUFBTWhCLEtBQUtPLFNBQVU7WUFDeEIsSUFBSVc7WUFDSixNQUFNQyxLQUFLLElBQUlDLE9BQU9wQixFQUFFUyxLQUFLO1lBQzdCLHFCQUFxQjtZQUNyQixNQUFPLENBQUNTLElBQUlDLEdBQUdFLElBQUksQ0FBQ0osS0FBSSxNQUFPLEtBQU07Z0JBQ25DLE1BQU1LLE1BQU1KLENBQUMsQ0FBQyxFQUFFO2dCQUNoQixNQUFNSyxVQUFVakMsZUFBZWdDO2dCQUMvQlQsU0FBU1csSUFBSSxDQUFDO29CQUNaQyxNQUFNZDtvQkFDTk0sTUFBTUQsSUFBSTtvQkFDVlIsTUFBTVIsRUFBRVEsSUFBSTtvQkFDWmtCLFNBQVNKO29CQUNUQztvQkFDQUksVUFBVXhCLGFBQWFtQjtnQkFDekI7Z0JBQ0EsK0NBQStDO2dCQUMvQyxJQUFJSCxHQUFHUyxTQUFTLEtBQUtWLEVBQUVXLEtBQUssRUFBRVYsR0FBR1MsU0FBUztZQUM1QztRQUNGO0lBQ0Y7SUFDQSxPQUFPZjtBQUNUIiwic291cmNlcyI6WyJGOlxcZmFyaGFuXFxQcm9qZWN0c1xca2V5a2l0ZVxcdXRpbHNcXHNlY3VyaXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHV0aWxzL3NlY3VyaXR5LnRzXHJcbmV4cG9ydCBpbnRlcmZhY2UgRmluZGluZyB7XHJcbiAgZmlsZTogc3RyaW5nO1xyXG4gIGxpbmU6IG51bWJlcjtcclxuICB0eXBlOiBzdHJpbmc7XHJcbiAgc25pcHBldDogc3RyaW5nO1xyXG4gIGVudHJvcHk/OiBudW1iZXI7XHJcbiAgcmVkYWN0ZWQ/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1RleHRDb250ZW50KGJ1Zk9yU3RyOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAvLyBjcnVkZSBoZXVyaXN0aWM6IGlmIGl0IGNvbnRhaW5zIG1hbnkgY29udHJvbCBjaGFycyBpdCdzIGJpbmFyeVxyXG4gIC8vIGJ1dCBoZXJlIGlucHV0IGlzIHN0cmluZzsgY2hlY2sgZm9yIE5VTHMgb3IgbWFueSBjb250cm9sIGNoYXJzXHJcbiAgcmV0dXJuICEvW1xceDAwLVxceDA4XFx4MEUtXFx4MUZdLy50ZXN0KGJ1Zk9yU3RyKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNoYW5ub25FbnRyb3B5KHM6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgaWYgKCFzIHx8IHMubGVuZ3RoID09PSAwKSByZXR1cm4gMDtcclxuICBjb25zdCBmcmVxOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+ID0ge307XHJcbiAgZm9yIChjb25zdCBjaCBvZiBzKSBmcmVxW2NoXSA9IChmcmVxW2NoXSB8fCAwKSArIDE7XHJcbiAgbGV0IGVudCA9IDA7XHJcbiAgY29uc3QgbGVuID0gcy5sZW5ndGg7XHJcbiAgZm9yIChjb25zdCBrIG9mIE9iamVjdC5rZXlzKGZyZXEpKSB7XHJcbiAgICBjb25zdCBwID0gZnJlcVtrXSAvIGxlbjtcclxuICAgIGVudCAtPSBwICogTWF0aC5sb2cyKHApO1xyXG4gIH1cclxuICByZXR1cm4gZW50O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVkYWN0U2VjcmV0KHNlY3JldDogc3RyaW5nKTogc3RyaW5nIHtcclxuICBpZiAoIXNlY3JldCkgcmV0dXJuICdbUkVEQUNURURdJztcclxuICBjb25zdCBsYXN0ID0gc2VjcmV0LnNsaWNlKC00KTtcclxuICByZXR1cm4gYFtSRURBQ1RFRF0uLi4ke2xhc3R9YDtcclxufVxyXG5cclxuY29uc3QgUEFUVEVSTlM6IHsgdHlwZTogc3RyaW5nOyByZWdleDogUmVnRXhwIH1bXSA9IFtcclxuICB7IHR5cGU6ICdBV1MgQWNjZXNzIEtleScsIHJlZ2V4OiAvQUtJQVswLTlBLVpdezE2fS9nIH0sXHJcbiAgeyB0eXBlOiAnR29vZ2xlIEFQSSBLZXknLCByZWdleDogL0FJemFbMC05QS1aYS16LV9dezM1fS9nIH0sXHJcbiAgeyB0eXBlOiAnR2l0SHViIFBBVC1saWtlJywgcmVnZXg6IC9naFtwb3Vzcl1fWzAtOWEtekEtWl9dezM2fS9nIH0sXHJcbiAgeyB0eXBlOiAnU2xhY2sgVG9rZW4nLCByZWdleDogL3hveFtiYXByc10tWzAtOWEtekEtWi1dezEwLDQ4fS9nIH0sXHJcbiAgeyB0eXBlOiAnSldUJywgcmVnZXg6IC9leUpbQS1aYS16MC05LV9dK1xcLltBLVphLXowLTktX10rXFwuW0EtWmEtejAtOS1fLisvPV0qL2cgfSxcclxuICB7IHR5cGU6ICdHZW5lcmljIEFQSSBLZXkgKHZhciknLCByZWdleDogL2FwaVtfLV0/a2V5XFxzKls6PV1cXHMqWydcIl0/KFtBLVphLXowLTktXy5dKylbJ1wiXT8vZ2kgfSxcclxuICB7IHR5cGU6ICdQYXNzd29yZCB2YXInLCByZWdleDogL3Bhc3N3b3JkXFxzKls6PV1cXHMqWydcIl0uKz9bJ1wiXS9naSB9LFxyXG4gIHsgdHlwZTogJ1ByaXZhdGUgS2V5IFBFTScsIHJlZ2V4OiAvLS0tLS1CRUdJTiAoUlNBIHxFTkNSWVBURUQgKT9QUklWQVRFIEtFWS0tLS0tL2cgfVxyXG5dO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNjYW5Db250ZW50KGZpbGVQYXRoOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZyk6IEZpbmRpbmdbXSB7XHJcbiAgY29uc3QgZmluZGluZ3M6IEZpbmRpbmdbXSA9IFtdO1xyXG4gIGlmICghY29udGVudCB8fCB0eXBlb2YgY29udGVudCAhPT0gJ3N0cmluZycpIHJldHVybiBmaW5kaW5ncztcclxuICBpZiAoIWlzVGV4dENvbnRlbnQoY29udGVudCkpIHJldHVybiBmaW5kaW5ncztcclxuXHJcbiAgY29uc3QgbGluZXMgPSBjb250ZW50LnNwbGl0KC9cXHI/XFxuLyk7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykge1xyXG4gICAgY29uc3QgbGluZSA9IGxpbmVzW2ldO1xyXG4gICAgZm9yIChjb25zdCBwIG9mIFBBVFRFUk5TKSB7XHJcbiAgICAgIGxldCBtOiBSZWdFeHBFeGVjQXJyYXkgfCBudWxsO1xyXG4gICAgICBjb25zdCByZSA9IG5ldyBSZWdFeHAocC5yZWdleCk7XHJcbiAgICAgIC8vIHJ1biBnbG9iYWwgbWF0Y2hlc1xyXG4gICAgICB3aGlsZSAoKG0gPSByZS5leGVjKGxpbmUpKSAhPT0gbnVsbCkge1xyXG4gICAgICAgIGNvbnN0IHJhdyA9IG1bMF07XHJcbiAgICAgICAgY29uc3QgZW50cm9weSA9IHNoYW5ub25FbnRyb3B5KHJhdyk7XHJcbiAgICAgICAgZmluZGluZ3MucHVzaCh7XHJcbiAgICAgICAgICBmaWxlOiBmaWxlUGF0aCxcclxuICAgICAgICAgIGxpbmU6IGkgKyAxLFxyXG4gICAgICAgICAgdHlwZTogcC50eXBlLFxyXG4gICAgICAgICAgc25pcHBldDogcmF3LFxyXG4gICAgICAgICAgZW50cm9weSxcclxuICAgICAgICAgIHJlZGFjdGVkOiByZWRhY3RTZWNyZXQocmF3KVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIGF2b2lkIGluZmluaXRlIGxvb3BzIGZvciB6ZXJvLWxlbmd0aCBtYXRjaGVzXHJcbiAgICAgICAgaWYgKHJlLmxhc3RJbmRleCA9PT0gbS5pbmRleCkgcmUubGFzdEluZGV4Kys7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIGZpbmRpbmdzO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJpc1RleHRDb250ZW50IiwiYnVmT3JTdHIiLCJ0ZXN0Iiwic2hhbm5vbkVudHJvcHkiLCJzIiwibGVuZ3RoIiwiZnJlcSIsImNoIiwiZW50IiwibGVuIiwiayIsIk9iamVjdCIsImtleXMiLCJwIiwiTWF0aCIsImxvZzIiLCJyZWRhY3RTZWNyZXQiLCJzZWNyZXQiLCJsYXN0Iiwic2xpY2UiLCJQQVRURVJOUyIsInR5cGUiLCJyZWdleCIsInNjYW5Db250ZW50IiwiZmlsZVBhdGgiLCJjb250ZW50IiwiZmluZGluZ3MiLCJsaW5lcyIsInNwbGl0IiwiaSIsImxpbmUiLCJtIiwicmUiLCJSZWdFeHAiLCJleGVjIiwicmF3IiwiZW50cm9weSIsInB1c2giLCJmaWxlIiwic25pcHBldCIsInJlZGFjdGVkIiwibGFzdEluZGV4IiwiaW5kZXgiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./utils/security.ts\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscan&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cscan.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();